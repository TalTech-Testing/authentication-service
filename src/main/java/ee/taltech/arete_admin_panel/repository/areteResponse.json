{
  "version": "arete_2.0",
  "errors": [],
  "files": [],
  "testFiles": [],
  "testSuites": [
    {
      "unitTests": [
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 13,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__print_10_times_hello_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__print_10_times_hello_output_is_correct",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 2,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__print_n_times_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__print_n_times_output_is_correct",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__repeat_string_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__repeat_string_positive_numbers",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__repeat_string_zero_times",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__repeat_string_negative_numbers",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__sum_between_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__sum_between_same_numbers",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__sum_between__start_lower_than_end",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__sum_between__start_higher_than_end",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__sum_of_even_numbers_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__sum_of_even_numbers_is_correct",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__get_first_element_starting_with_a_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__get_first_element_starting_with_a__with_empty_list_and_empty_element",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__get_first_element_starting_with_a__when_no_such_element",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__get_first_element_starting_with_a__when_such_element_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__get_elements_starting_with_a_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__get_elements_starting_with_a__with_empty_list_and_empty_element",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__get_elements_starting_with_a__when_no_such_element",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__get_elements_starting_with_a__when_such_elements_exist",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__remove_odd_numbers_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__remove_odd_numbers_01",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__remove_odd_numbers_02",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__remove_odd_numbers_03",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__remove_odd_numbers_04",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 2,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__remove_odd_numbers_05",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_min_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_min_01",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_min_02",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_min_03",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_min_04",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 2,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_min_05",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_max_pos_exists",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_max_pos_01",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_max_pos_02",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_max_pos_03",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 1,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_max_pos_04",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        },
        {
          "groupsDependedUpon": [],
          "status": "PASSED",
          "weight": 1,
          "printExceptionMessage": false,
          "printStackTrace": null,
          "timeElapsed": 4,
          "methodsDependedUpon": [],
          "stackTrace": null,
          "name": "test__return_max_pos_05",
          "stdout": [],
          "exceptionClass": "",
          "exceptionMessage": "",
          "stderr": []
        }
      ],
      "name": "/pytest_tmp/test_t04.py",
      "file": "/pytest_tmp/test_t04.py",
      "startDate": null,
      "endDate": null,
      "weight": null,
      "passedCount": 40,
      "grade": 100.0
    }
  ],
  "consoleOutputs": [
    {
      "content": "reading source from:/student\ncmd:python3.7 -m py_compile \"/pytest_tmp/t04.py\"\noutput:\nstderr:\nprocessing test file:/pytest_tmp/t04.md\nprocessing test file:/pytest_tmp/test_t04.py\nfound test in filename test_t04.py (path: /pytest_tmp/test_t04.py)\nExecuted: timeout 5000 pytest --json=/pytest_output.json --junitxml=/pytext_output.xml --durations=10 --timeout_method=signal --disable-socket \"/pytest_tmp/test_t04.py\"\nsterr: \nstdout: ============================= test session starts ==============================\nplatform linux -- Python 3.7.5, pytest-5.3.4, py-1.8.1, pluggy-0.13.1\nrootdir: /pytest_tmp, inifile: pytest.ini\nplugins: timeout-1.3.4, json-0.4.0, socket-0.3.3, console-scripts-0.2.0\ncollected 40 items\n\ntest_t04.py ........................................                     [100%]\n\n=============================== warnings summary ===============================\n/usr/local/lib/python3.7/dist-packages/_pytest/junitxml.py:436\n  /usr/local/lib/python3.7/dist-packages/_pytest/junitxml.py:436: PytestDeprecationWarning: The 'junit_family' default value will change to 'xunit2' in pytest 6.0.\n  Add 'junit_family=xunit1' to your pytest.ini file to keep the current format in future versions of pytest and silence this warning.\n    _issue_warning_captured(deprecated.JUNIT_XML_DEFAULT_FAMILY, config.hook, 2)\n\n/usr/local/lib/python3.7/dist-packages/_pytest/mark/structures.py:327\n  /usr/local/lib/python3.7/dist-packages/_pytest/mark/structures.py:327: PytestUnknownMarkWarning: Unknown pytest.mark.incgroup - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html\n    PytestUnknownMarkWarning,\n\n/usr/local/lib/python3.7/dist-packages/_pytest/mark/structures.py:327\n  /usr/local/lib/python3.7/dist-packages/_pytest/mark/structures.py:327: PytestUnknownMarkWarning: Unknown pytest.mark.incgroupdepend - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html\n    PytestUnknownMarkWarning,\n\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\n-------------------- generated xml file: /pytext_output.xml --------------------\n------------------ generated json report: /pytest_output.json ------------------\n========================== slowest 10 test durations ===========================\n0.01s setup    test_t04.py::test__print_10_times_hello_exists\n\n(0.00 durations hidden.  Use -vv to show these durations.)\n======================== 40 passed, 3 warnings in 0.16s ========================\n\nreturn code:0\nreading output file:/pytest_output.json\ncontents:{'report': {'environment': {'Python': '3.7.5', 'Platform': 'Linux-4.15.0-72-generic-x86_64-with-Ubuntu-18.04-bionic'}, 'tests': [{'name': 'test_t04.py::test__print_10_times_hello_exists', 'duration': 0.013468503952026367, 'run_index': 0, 'setup': {'name': 'setup', 'duration': 0.0064694881439208984, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00025916099548339844, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0002703666687011719, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__print_10_times_hello_output_is_correct', 'duration': 0.001260995864868164, 'run_index': 1, 'setup': {'name': 'setup', 'duration': 0.0003657341003417969, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00023221969604492188, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00029730796813964844, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__print_n_times_exists', 'duration': 0.002074718475341797, 'run_index': 2, 'setup': {'name': 'setup', 'duration': 0.0006740093231201172, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0003502368927001953, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0003764629364013672, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__print_n_times_output_is_correct', 'duration': 0.001974344253540039, 'run_index': 3, 'setup': {'name': 'setup', 'duration': 0.0006198883056640625, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00035452842712402344, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0003800392150878906, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__repeat_string_exists', 'duration': 0.001863241195678711, 'run_index': 4, 'setup': {'name': 'setup', 'duration': 0.0006513595581054688, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00035381317138671875, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0002067089080810547, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__repeat_string_positive_numbers', 'duration': 0.0010673999786376953, 'run_index': 5, 'setup': {'name': 'setup', 'duration': 0.0003261566162109375, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0001957416534423828, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0002193450927734375, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__repeat_string_zero_times', 'duration': 0.001039743423461914, 'run_index': 6, 'setup': {'name': 'setup', 'duration': 0.0003230571746826172, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0001914501190185547, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.000202178955078125, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__repeat_string_negative_numbers', 'duration': 0.001026153564453125, 'run_index': 7, 'setup': {'name': 'setup', 'duration': 0.0003228187561035156, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0001735687255859375, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020694732666015625, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__sum_between_exists', 'duration': 0.0010523796081542969, 'run_index': 8, 'setup': {'name': 'setup', 'duration': 0.0003368854522705078, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017714500427246094, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0002014636993408203, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__sum_between_same_numbers', 'duration': 0.0010454654693603516, 'run_index': 9, 'setup': {'name': 'setup', 'duration': 0.0003323554992675781, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00018525123596191406, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00019550323486328125, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__sum_between__start_lower_than_end', 'duration': 0.0011348724365234375, 'run_index': 10, 'setup': {'name': 'setup', 'duration': 0.000324249267578125, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00027489662170410156, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00021147727966308594, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__sum_between__start_higher_than_end', 'duration': 0.0011568069458007812, 'run_index': 11, 'setup': {'name': 'setup', 'duration': 0.0003249645233154297, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0003008842468261719, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020599365234375, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__sum_of_even_numbers_exists', 'duration': 0.0010256767272949219, 'run_index': 12, 'setup': {'name': 'setup', 'duration': 0.00032448768615722656, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00016808509826660156, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0002086162567138672, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__sum_of_even_numbers_is_correct', 'duration': 0.0011320114135742188, 'run_index': 13, 'setup': {'name': 'setup', 'duration': 0.0003521442413330078, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00023055076599121094, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0001971721649169922, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__get_first_element_starting_with_a_exists', 'duration': 0.0010380744934082031, 'run_index': 14, 'setup': {'name': 'setup', 'duration': 0.0003364086151123047, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00016808509826660156, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0001971721649169922, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__get_first_element_starting_with_a__with_empty_list_and_empty_element', 'duration': 0.001094818115234375, 'run_index': 15, 'setup': {'name': 'setup', 'duration': 0.0003514289855957031, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017881393432617188, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00021314620971679688, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__get_first_element_starting_with_a__when_no_such_element', 'duration': 0.0011620521545410156, 'run_index': 16, 'setup': {'name': 'setup', 'duration': 0.0003294944763183594, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00030231475830078125, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020074844360351562, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__get_first_element_starting_with_a__when_such_element_exists', 'duration': 0.0010607242584228516, 'run_index': 17, 'setup': {'name': 'setup', 'duration': 0.00032591819763183594, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00018715858459472656, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00022172927856445312, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__get_elements_starting_with_a_exists', 'duration': 0.0010380744934082031, 'run_index': 18, 'setup': {'name': 'setup', 'duration': 0.0003361701965332031, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00016832351684570312, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00019741058349609375, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__get_elements_starting_with_a__with_empty_list_and_empty_element', 'duration': 0.0010228157043457031, 'run_index': 19, 'setup': {'name': 'setup', 'duration': 0.0003237724304199219, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017881393432617188, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0001964569091796875, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__get_elements_starting_with_a__when_no_such_element', 'duration': 0.0010399818420410156, 'run_index': 20, 'setup': {'name': 'setup', 'duration': 0.00032782554626464844, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00018072128295898438, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020360946655273438, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__get_elements_starting_with_a__when_such_elements_exist', 'duration': 0.0010466575622558594, 'run_index': 21, 'setup': {'name': 'setup', 'duration': 0.00032210350036621094, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0002071857452392578, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0001952648162841797, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__remove_odd_numbers_exists', 'duration': 0.0010190010070800781, 'run_index': 22, 'setup': {'name': 'setup', 'duration': 0.0003228187561035156, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017690658569335938, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0001964569091796875, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__remove_odd_numbers_01', 'duration': 0.0010561943054199219, 'run_index': 23, 'setup': {'name': 'setup', 'duration': 0.0003352165222167969, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00018405914306640625, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020170211791992188, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__remove_odd_numbers_02', 'duration': 0.0010251998901367188, 'run_index': 24, 'setup': {'name': 'setup', 'duration': 0.00032401084899902344, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017952919006347656, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0001976490020751953, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__remove_odd_numbers_03', 'duration': 0.0010821819305419922, 'run_index': 25, 'setup': {'name': 'setup', 'duration': 0.0003256797790527344, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0002281665802001953, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020265579223632812, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__remove_odd_numbers_04', 'duration': 0.0010166168212890625, 'run_index': 26, 'setup': {'name': 'setup', 'duration': 0.00032258033752441406, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0001735687255859375, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00019788742065429688, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__remove_odd_numbers_05', 'duration': 0.0028247833251953125, 'run_index': 27, 'setup': {'name': 'setup', 'duration': 0.0003185272216796875, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.001981496810913086, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020623207092285156, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_min_exists', 'duration': 0.0010263919830322266, 'run_index': 28, 'setup': {'name': 'setup', 'duration': 0.0003275871276855469, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0001685619354248047, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020265579223632812, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_min_01', 'duration': 0.001047372817993164, 'run_index': 29, 'setup': {'name': 'setup', 'duration': 0.0003216266632080078, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00020360946655273438, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020051002502441406, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_min_02', 'duration': 0.0012993812561035156, 'run_index': 30, 'setup': {'name': 'setup', 'duration': 0.0004515647888183594, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00018787384033203125, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020837783813476562, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_min_03', 'duration': 0.0010387897491455078, 'run_index': 31, 'setup': {'name': 'setup', 'duration': 0.0003311634063720703, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017452239990234375, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020194053649902344, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_min_04', 'duration': 0.0010223388671875, 'run_index': 32, 'setup': {'name': 'setup', 'duration': 0.00032329559326171875, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017070770263671875, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020503997802734375, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_min_05', 'duration': 0.0029065608978271484, 'run_index': 33, 'setup': {'name': 'setup', 'duration': 0.0003261566162109375, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0020542144775390625, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020003318786621094, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_max_pos_exists', 'duration': 0.0010318756103515625, 'run_index': 34, 'setup': {'name': 'setup', 'duration': 0.00032639503479003906, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017213821411132812, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020694732666015625, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_max_pos_01', 'duration': 0.001033782958984375, 'run_index': 35, 'setup': {'name': 'setup', 'duration': 0.00032973289489746094, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.00017762184143066406, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00019669532775878906, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_max_pos_02', 'duration': 0.0010271072387695312, 'run_index': 36, 'setup': {'name': 'setup', 'duration': 0.0003268718719482422, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.000171661376953125, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.00020170211791992188, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_max_pos_03', 'duration': 0.0010280609130859375, 'run_index': 37, 'setup': {'name': 'setup', 'duration': 0.0003230571746826172, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0001728534698486328, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0002090930938720703, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_max_pos_04', 'duration': 0.001049041748046875, 'run_index': 38, 'setup': {'name': 'setup', 'duration': 0.0003254413604736328, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.0001971721649169922, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0002009868621826172, 'outcome': 'passed'}, 'outcome': 'passed'}, {'name': 'test_t04.py::test__return_max_pos_05', 'duration': 0.004704952239990234, 'run_index': 39, 'setup': {'name': 'setup', 'duration': 0.0003256797790527344, 'outcome': 'passed'}, 'call': {'name': 'call', 'duration': 0.003420591354370117, 'outcome': 'passed'}, 'teardown': {'name': 'teardown', 'duration': 0.0006330013275146484, 'outcome': 'passed'}, 'outcome': 'passed'}], 'summary': {'passed': 40, 'num_tests': 40, 'duration': 0.16357874870300293}, 'created_at': '2020-02-08 01:18:39.315414'}}\nresult:{\"type\": \"hodor_studenttester\", \"results\": [{\"code\": 102, \"diagnosticList\": [], \"identifier\": \"COMPILER\", \"result\": \"SUCCESS\"}, {\"code\": 103, \"files\": [{\"path\": \"t04.py\", \"contents\": \"\\ndef print_10_times_hello():\\n    \\\"\\\"\\\"Print 'hello' 10 times.\\\"\\\"\\\"\\n    print('hello' * 10)\\n\\n\\ndef print_n_times(n, text):\\n    \\\"\\\"\\\"Print text n times.\\\"\\\"\\\"\\n    print(text * n)\\n\\n\\ndef repeat_string(n, text):\\n    \\\"\\\"\\\"Return string where text is repeated n times.\\\"\\\"\\\"\\n    return str(text * n)\\n\\n\\ndef sum_between(start, end):\\n    \\\"\\\"\\\"\\n    Return sum of integers between start and end (inclusive).\\n\\n    sum_between(3, 5) = 3 + 4 + 5 = 12\\n    sum_between(5, 3) = 12\\n    \\\"\\\"\\\"\\n    return sum(i for i in range (min(start, end), max(start, end) + 1))\\n\\n\\ndef sum_of_even_numbers(n):\\n    \\\"\\\"\\\"Return sum of even numbers from 0 up to n (included).\\\"\\\"\\\"\\n    return sum(i for i in range (n + 1) if i % 2 == 0)\\n\\n\\ndef sum_of_multiples(m, n):\\n    \\\"\\\"\\\"Return sum of numbers which are multiple of m between 0 and n (included).\\\"\\\"\\\"\\n    return sum(i for i in range (n + 1) if i % m == 0)\\n\\n\\ndef get_first_element_starting_with_a(names):\\n    \\\"\\\"\\\"\\n    Return the first element in list which starts with \\\"a\\\".\\n\\n    If there are no elements which start with \\\"a\\\", return None.\\n    :param names: List of string.\\n    :return: string starting with \\\"a\\\" or None.\\n    \\\"\\\"\\\"\\n    if len(names) > 0:\\n        if len(list(i for i in names if len(i) > 0 if i[0] == 'a')) > 0:\\n            return list(i for i in names if len(i) > 0 if i[0] == 'a')[0]\\n        else:\\n            return None\\n    else:\\n        return None\\n\\ndef get_elements_starting_with_a(names):\\n    \\\"\\\"\\\"\\n    Return a list of elements which start with \\\"a\\\".\\n\\n    If there are no elements which start with \\\"a\\\", return empty list.\\n    :param names: List of string.\\n    :return: List of strings starting with \\\"a\\\".\\n    \\\"\\\"\\\"\\n    if len(names) > 0:\\n        return list(i for i in names if len(i) > 0 if i[0] == 'a')\\n    else:\\n        return names\\n\\ndef remove_odd_numbers(numbers):\\n    \\\"\\\"\\\"Return a new list where odd numbers are removed.\\\"\\\"\\\"\\n    if len(numbers) > 0:\\n        return list(i for i in numbers if i % 2 == 0)\\n    else:\\n        return numbers\\n\\n\\ndef return_min(numbers: list):\\n    \\\"\\\"\\\"Return the smallest number or None if list is empty.\\\"\\\"\\\"\\n    if len(numbers) > 0:\\n        return min(numbers);\\n    else:\\n        return None\\n\\n\\ndef return_max_pos(numbers: list):\\n    \\\"\\\"\\\"Return the index of the left most largest element in the list or -1 if the list is empty.\\\"\\\"\\\"\\n    if len(numbers) > 0:\\n        return numbers.index(max(numbers))\\n    else:\\n        return -1\\n\\n\\nif __name__ == '__main__':\\n    print(sum_of_multiples(11, 10))\", \"isTest\": false}], \"identifier\": \"FILEWRITER\", \"result\": \"SUCCESS\"}, {\"code\": 500, \"identifier\": \"TESTNG\", \"result\": \"SUCCESS\", \"testContexts\": [{\"name\": \"/pytest_tmp/test_t04.py\", \"file\": \"/pytest_tmp/test_t04.py\", \"count\": 40, \"passedCount\": 40, \"unitTests\": [{\"name\": \"test__print_10_times_hello_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 13}, {\"name\": \"test__print_10_times_hello_output_is_correct\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__print_n_times_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 2}, {\"name\": \"test__print_n_times_output_is_correct\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__repeat_string_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__repeat_string_positive_numbers\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__repeat_string_zero_times\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__repeat_string_negative_numbers\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__sum_between_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__sum_between_same_numbers\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__sum_between__start_lower_than_end\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__sum_between__start_higher_than_end\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__sum_of_even_numbers_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__sum_of_even_numbers_is_correct\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__get_first_element_starting_with_a_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__get_first_element_starting_with_a__with_empty_list_and_empty_element\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__get_first_element_starting_with_a__when_no_such_element\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__get_first_element_starting_with_a__when_such_element_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__get_elements_starting_with_a_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__get_elements_starting_with_a__with_empty_list_and_empty_element\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__get_elements_starting_with_a__when_no_such_element\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__get_elements_starting_with_a__when_such_elements_exist\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__remove_odd_numbers_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__remove_odd_numbers_01\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__remove_odd_numbers_02\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__remove_odd_numbers_03\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__remove_odd_numbers_04\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__remove_odd_numbers_05\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 2}, {\"name\": \"test__return_min_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_min_01\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_min_02\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_min_03\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_min_04\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_min_05\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 2}, {\"name\": \"test__return_max_pos_exists\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_max_pos_01\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_max_pos_02\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_max_pos_03\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_max_pos_04\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 1}, {\"name\": \"test__return_max_pos_05\", \"status\": \"PASSED\", \"weight\": 1, \"printExceptionMessage\": false, \"exceptionClass\": \"\", \"exceptionMessage\": \"\", \"timeElapsed\": 4}], \"identifier\": 1, \"grade\": 100.0}], \"totalGrade\": 100.0, \"totalCount\": 40, \"totalPassedCount\": 40}, {\"code\": 2147483647, \"identifier\": \"REPORT\", \"output\": \"Test: test_t04.py\\n\\n   test__print_10_times_hello_exists: passed (13.47 ms)\\n\\n   test__print_10_times_hello_output_is_correct: passed (1.261 ms)\\n\\n   test__print_n_times_exists: passed (2.075 ms)\\n\\n   test__print_n_times_output_is_correct: passed (1.974 ms)\\n\\n   test__repeat_string_exists: passed (1.863 ms)\\n\\n   test__repeat_string_positive_numbers: passed (1.067 ms)\\n\\n   test__repeat_string_zero_times: passed (1.04 ms)\\n\\n   test__repeat_string_negative_numbers: passed (1.026 ms)\\n\\n   test__sum_between_exists: passed (1.052 ms)\\n\\n   test__sum_between_same_numbers: passed (1.045 ms)\\n\\n   test__sum_between__start_lower_than_end: passed (1.135 ms)\\n\\n   test__sum_between__start_higher_than_end: passed (1.157 ms)\\n\\n   test__sum_of_even_numbers_exists: passed (1.026 ms)\\n\\n   test__sum_of_even_numbers_is_correct: passed (1.132 ms)\\n\\n   test__get_first_element_starting_with_a_exists: passed (1.038 ms)\\n\\n   test__get_first_element_starting_with_a__with_empty_list_and_empty_element: passed (1.095 ms)\\n\\n   test__get_first_element_starting_with_a__when_no_such_element: passed (1.162 ms)\\n\\n   test__get_first_element_starting_with_a__when_such_element_exists: passed (1.061 ms)\\n\\n   test__get_elements_starting_with_a_exists: passed (1.038 ms)\\n\\n   test__get_elements_starting_with_a__with_empty_list_and_empty_element: passed (1.023 ms)\\n\\n   test__get_elements_starting_with_a__when_no_such_element: passed (1.04 ms)\\n\\n   test__get_elements_starting_with_a__when_such_elements_exist: passed (1.047 ms)\\n\\n   test__remove_odd_numbers_exists: passed (1.019 ms)\\n\\n   test__remove_odd_numbers_01: passed (1.056 ms)\\n\\n   test__remove_odd_numbers_02: passed (1.025 ms)\\n\\n   test__remove_odd_numbers_03: passed (1.082 ms)\\n\\n   test__remove_odd_numbers_04: passed (1.017 ms)\\n\\n   test__remove_odd_numbers_05: passed (2.825 ms)\\n\\n   test__return_min_exists: passed (1.026 ms)\\n\\n   test__return_min_01: passed (1.047 ms)\\n\\n   test__return_min_02: passed (1.299 ms)\\n\\n   test__return_min_03: passed (1.039 ms)\\n\\n   test__return_min_04: passed (1.022 ms)\\n\\n   test__return_min_05: passed (2.907 ms)\\n\\n   test__return_max_pos_exists: passed (1.032 ms)\\n\\n   test__return_max_pos_01: passed (1.034 ms)\\n\\n   test__return_max_pos_02: passed (1.027 ms)\\n\\n   test__return_max_pos_03: passed (1.028 ms)\\n\\n   test__return_max_pos_04: passed (1.049 ms)\\n\\n   test__return_max_pos_05: passed (4.705 ms)\\n\\n\\nTotal number of tests: 40\\nPassed tests: 40\\nFailed tests: 0\\n\\nPercentage: 100.00%\\n\\n\", \"result\": \"SUCCESS\"}], \"extra\": \"extra\"}\n"
    }
  ],
  "output": "<h2>Testing results</h2><p>Submission hash: jcf963kyf2omfnfuaojkkhmxne6eu90byhymdagt</p><br><p>Quote by Plato: \"We can easily forgive a child who is afraid of the dark; the real tragedy of life is when men are afraid of the light.\"</p><br><br><br><table style='width:100%;border: 1px solid black;border-collapse: collapse;' id='errors'><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><th style='color:#D5DDE5;background:#1b1e24;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'>File</th><th style='color:#D5DDE5;background:#1b1e24;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'>Line</th><th style='color:#D5DDE5;background:#1b1e24;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'>Column</th><th style='color:#D5DDE5;background:#1b1e24;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'>Error</th></tr></table><br>Style percentage: 100%<br><br><br><table style='width:100%;border: 1px solid black;border-collapse: collapse;'><th style='color:#D5DDE5;background:#1b1e24;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'>test_t04.py</th><th style='color:#D5DDE5;background:#1b1e24;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'>Result</th><th style='color:#D5DDE5;background:#1b1e24;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'>Time (ms)</th><th style='color:#D5DDE5;background:#1b1e24;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'>Weight</th><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__print_10_times_hello_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>13</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__print_10_times_hello_output_is_correct</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__print_n_times_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>2</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__print_n_times_output_is_correct</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__repeat_string_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__repeat_string_positive_numbers</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__repeat_string_zero_times</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__repeat_string_negative_numbers</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__sum_between_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__sum_between_same_numbers</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__sum_between__start_lower_than_end</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__sum_between__start_higher_than_end</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__sum_of_even_numbers_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__sum_of_even_numbers_is_correct</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__get_first_element_starting_with_a_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__get_first_element_starting_with_a__with_empty_list_and_empty_element</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__get_first_element_starting_with_a__when_no_such_element</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__get_first_element_starting_with_a__when_such_element_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__get_elements_starting_with_a_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__get_elements_starting_with_a__with_empty_list_and_empty_element</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__get_elements_starting_with_a__when_no_such_element</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__get_elements_starting_with_a__when_such_elements_exist</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__remove_odd_numbers_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__remove_odd_numbers_01</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__remove_odd_numbers_02</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__remove_odd_numbers_03</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__remove_odd_numbers_04</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__remove_odd_numbers_05</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>2</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_min_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_min_01</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_min_02</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_min_03</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_min_04</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_min_05</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>2</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_max_pos_exists</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_max_pos_01</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_max_pos_02</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_max_pos_03</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_max_pos_04</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr><tr style='border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>test__return_max_pos_05</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:greenyellow;'>PASSED</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>4</p></td><td style='color:#D5DDE5;background:#8FBC8F;border: 1px solid black;border-collapse: collapse;padding: 5px;text-align: left;'><p style='color:black;'>1</p></td></tr></table><p>Number of tests: 40</p><p>Passed tests: 40</p><p>Total weight: 40</p><p>Passed weight: 40</p><p>Percentage: 100.0%</p><br><br><h2>Overall</h2><p>Total number of tests: 40</p><p>Total passed tests: 40</p><p>Total weight: 40</p><p>Total Passed weight: 40</p><p>Total Percentage: 100.0%</p><br><br><p>Timestamp: 08/02/2020 03:18:37</p>",
  "totalCount": 40,
  "totalGrade": "100.0",
  "totalPassedCount": 40,
  "testingPlatform": "python",
  "root": "ex-1",
  "gitTestRepo": "git@gitlab.cs.ttu.ee:iti0102-2019/ex.git",
  "gitStudentRepo": null,
  "style": 100,
  "slug": "t04",
  "returnExtra": null,
  "hash": "jcf963kyf2omfnfuaojkkhmxne6eu90byhymdagt",
  "uniid": null,
  "timestamp": 1581124717702,
  "commitMessage": null,
  "priority": 5,
  "dockerExtra": [
    "-r TESTNG,COMPILER,CHECKSTYLE,FILEWRITER,REPORT"
  ],
  "systemExtra": [
    "noFiles",
    "noMail"
  ],
  "dockerTimeout": 360,
  "failed": false
}